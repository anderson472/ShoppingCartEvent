@page "/productCategory/create/{CategoryId:int}"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService

<h3>Crear Producto categoría</h3>

<ProductCategoryForm @ref="productCategoryForm" ProductCategory="productCategory" OnValidSubmit="Create" ReturnAction="Return" />

@code {
    private ProductCategory productCategory = new();
    private ProductCategoryForm? productCategoryForm;

    [Parameter]
    public int CategoryId { get; set; }

    private async Task Create()
    {

        productCategory.CategoryId = CategoryId;
        var httpResponse = await repository.Post("/api/productCategory", productCategory);
        if (httpResponse.Error)
        {
            var message = await httpResponse.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        Return();
    }

    private void Return()
    {
        productCategoryForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo($"/categories/details/{CategoryId}");
    }
}
